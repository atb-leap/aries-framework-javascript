/**
 * Aries Cloud Agent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class V10CredentialExchange {
    /**
    * Issuer choice to issue to request in this credential exchange
    */
    'autoIssue'?: boolean;
    /**
    * Holder choice to accept offer in this credential exchange
    */
    'autoOffer'?: boolean;
    /**
    * Issuer choice to remove this credential exchange record when complete
    */
    'autoRemove'?: boolean;
    /**
    * Connection identifier
    */
    'connectionId'?: string;
    /**
    * Time of record creation
    */
    'createdAt'?: string;
    /**
    * Credential as stored
    */
    'credential'?: any;
    /**
    * Credential definition identifier
    */
    'credentialDefinitionId'?: string;
    /**
    * Credential exchange identifier
    */
    'credentialExchangeId'?: string;
    /**
    * Credential identifier
    */
    'credentialId'?: string;
    /**
    * (Indy) credential offer
    */
    'credentialOffer'?: any;
    /**
    * Serialized credential offer message
    */
    'credentialOfferDict'?: any;
    /**
    * Serialized credential proposal message
    */
    'credentialProposalDict'?: any;
    /**
    * (Indy) credential request
    */
    'credentialRequest'?: any;
    /**
    * (Indy) credential request metadata
    */
    'credentialRequestMetadata'?: any;
    /**
    * Error message
    */
    'errorMsg'?: string;
    /**
    * Issue-credential exchange initiator: self or external
    */
    'initiator'?: V10CredentialExchangeInitiatorEnum;
    /**
    * Parent thread identifier
    */
    'parentThreadId'?: string;
    /**
    * Credential as received, prior to storage in holder wallet
    */
    'rawCredential'?: any;
    /**
    * Revocation registry identifier
    */
    'revocRegId'?: string;
    /**
    * Credential identifier within revocation registry
    */
    'revocationId'?: string;
    /**
    * Issue-credential exchange role: holder or issuer
    */
    'role'?: V10CredentialExchangeRoleEnum;
    /**
    * Schema identifier
    */
    'schemaId'?: string;
    /**
    * Issue-credential exchange state
    */
    'state'?: string;
    /**
    * Thread identifier
    */
    'threadId'?: string;
    /**
    * Record trace information, based on agent configuration
    */
    'trace'?: boolean;
    /**
    * Time of last record update
    */
    'updatedAt'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "autoIssue",
            "baseName": "auto_issue",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoOffer",
            "baseName": "auto_offer",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoRemove",
            "baseName": "auto_remove",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "connectionId",
            "baseName": "connection_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "credential",
            "baseName": "credential",
            "type": "any",
            "format": ""
        },
        {
            "name": "credentialDefinitionId",
            "baseName": "credential_definition_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "credentialExchangeId",
            "baseName": "credential_exchange_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "credentialId",
            "baseName": "credential_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "credentialOffer",
            "baseName": "credential_offer",
            "type": "any",
            "format": ""
        },
        {
            "name": "credentialOfferDict",
            "baseName": "credential_offer_dict",
            "type": "any",
            "format": ""
        },
        {
            "name": "credentialProposalDict",
            "baseName": "credential_proposal_dict",
            "type": "any",
            "format": ""
        },
        {
            "name": "credentialRequest",
            "baseName": "credential_request",
            "type": "any",
            "format": ""
        },
        {
            "name": "credentialRequestMetadata",
            "baseName": "credential_request_metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "errorMsg",
            "baseName": "error_msg",
            "type": "string",
            "format": ""
        },
        {
            "name": "initiator",
            "baseName": "initiator",
            "type": "V10CredentialExchangeInitiatorEnum",
            "format": ""
        },
        {
            "name": "parentThreadId",
            "baseName": "parent_thread_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "rawCredential",
            "baseName": "raw_credential",
            "type": "any",
            "format": ""
        },
        {
            "name": "revocRegId",
            "baseName": "revoc_reg_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "revocationId",
            "baseName": "revocation_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "V10CredentialExchangeRoleEnum",
            "format": ""
        },
        {
            "name": "schemaId",
            "baseName": "schema_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        },
        {
            "name": "threadId",
            "baseName": "thread_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "trace",
            "baseName": "trace",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V10CredentialExchange.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type V10CredentialExchangeInitiatorEnum = "self" | "external" ;
export type V10CredentialExchangeRoleEnum = "holder" | "issuer" ;

