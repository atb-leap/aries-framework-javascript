/**
 * Aries Cloud Agent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class V20CredExRecord {
    /**
    * Issuer choice to issue to request in this credential exchange
    */
    'autoIssue'?: boolean;
    /**
    * Holder choice to accept offer in this credential exchange
    */
    'autoOffer'?: boolean;
    /**
    * Issuer choice to remove this credential exchange record when complete
    */
    'autoRemove'?: boolean;
    /**
    * Connection identifier
    */
    'connId'?: string;
    /**
    * Time of record creation
    */
    'createdAt'?: string;
    /**
    * Credential exchange identifier
    */
    'credExId'?: string;
    /**
    * Credential identifier stored in wallet
    */
    'credIdStored'?: string;
    /**
    * Serialized credential issue message
    */
    'credIssue'?: any;
    /**
    * Serialized credential offer message
    */
    'credOffer'?: any;
    /**
    * Serialized credential preview from credential proposal
    */
    'credPreview'?: any;
    /**
    * Serialized credential proposal message
    */
    'credProposal'?: any;
    /**
    * Serialized credential request message
    */
    'credRequest'?: any;
    /**
    * (Indy) credential request metadata
    */
    'credRequestMetadata'?: any;
    /**
    * Error message
    */
    'errorMsg'?: string;
    /**
    * Issue-credential exchange initiator: self or external
    */
    'initiator'?: V20CredExRecordInitiatorEnum;
    /**
    * Parent thread identifier
    */
    'parentThreadId'?: string;
    /**
    * Issue-credential exchange role: holder or issuer
    */
    'role'?: V20CredExRecordRoleEnum;
    /**
    * Issue-credential exchange state
    */
    'state'?: V20CredExRecordStateEnum;
    /**
    * Thread identifier
    */
    'threadId'?: string;
    /**
    * Record trace information, based on agent configuration
    */
    'trace'?: boolean;
    /**
    * Time of last record update
    */
    'updatedAt'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "autoIssue",
            "baseName": "auto_issue",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoOffer",
            "baseName": "auto_offer",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoRemove",
            "baseName": "auto_remove",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "connId",
            "baseName": "conn_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "credExId",
            "baseName": "cred_ex_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "credIdStored",
            "baseName": "cred_id_stored",
            "type": "string",
            "format": ""
        },
        {
            "name": "credIssue",
            "baseName": "cred_issue",
            "type": "any",
            "format": ""
        },
        {
            "name": "credOffer",
            "baseName": "cred_offer",
            "type": "any",
            "format": ""
        },
        {
            "name": "credPreview",
            "baseName": "cred_preview",
            "type": "any",
            "format": ""
        },
        {
            "name": "credProposal",
            "baseName": "cred_proposal",
            "type": "any",
            "format": ""
        },
        {
            "name": "credRequest",
            "baseName": "cred_request",
            "type": "any",
            "format": ""
        },
        {
            "name": "credRequestMetadata",
            "baseName": "cred_request_metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "errorMsg",
            "baseName": "error_msg",
            "type": "string",
            "format": ""
        },
        {
            "name": "initiator",
            "baseName": "initiator",
            "type": "V20CredExRecordInitiatorEnum",
            "format": ""
        },
        {
            "name": "parentThreadId",
            "baseName": "parent_thread_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "V20CredExRecordRoleEnum",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "V20CredExRecordStateEnum",
            "format": ""
        },
        {
            "name": "threadId",
            "baseName": "thread_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "trace",
            "baseName": "trace",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V20CredExRecord.attributeTypeMap;
    }
    
    public constructor() {
    }
}


export type V20CredExRecordInitiatorEnum = "self" | "external" ;
export type V20CredExRecordRoleEnum = "issuer" | "holder" ;
export type V20CredExRecordStateEnum = "proposal-sent" | "proposal-received" | "offer-sent" | "offer-received" | "request-sent" | "request-received" | "credential-issued" | "credential-received" | "done" ;

